// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`thread should match snapshot, has root post 1`] = `
<Connect(SafeAreaIos)
  excludeHeader={true}
  keyboardOffset={20}
>
  <Connect(StatusBar) />
  <KeyboardLayout
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <Connect(PostList)
      currentUserId="member_user_id"
      indicateNewMessages={false}
      lastPostIndex={-1}
      location="thread"
      navigator={
        Object {
          "dismissModal": [MockFunction],
          "pop": [MockFunction],
          "resetTo": [MockFunction],
          "setTitle": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "title": undefined,
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        }
      }
      postIds={
        Array [
          "root_id",
          "post_id_1",
          "post_id_2",
        ]
      }
      renderFooter={
        <Loading
          color="grey"
          size="large"
          style={Object {}}
        />
      }
    />
    <ForwardRef(forwardConnectRef)
      channelId="channel_id"
      channelIsArchived={false}
      navigator={
        Object {
          "dismissModal": [MockFunction],
          "pop": [MockFunction],
          "resetTo": [MockFunction],
          "setTitle": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "title": undefined,
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        }
      }
      onCloseChannel={[Function]}
      rootId="root_id"
    />
  </KeyboardLayout>
</Connect(SafeAreaIos)>
`;

exports[`thread should match snapshot, no root post, loading 1`] = `
<Connect(SafeAreaIos)
  excludeHeader={true}
  keyboardOffset={20}
>
  <Connect(StatusBar) />
  <KeyboardLayout
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <Loading
      color="grey"
      size="large"
      style={Object {}}
    />
  </KeyboardLayout>
</Connect(SafeAreaIos)>
`;

exports[`thread should match snapshot, render footer 1`] = `
<Connect(PostList)
  currentUserId="member_user_id"
  indicateNewMessages={false}
  lastPostIndex={-1}
  location="thread"
  navigator={
    Object {
      "dismissModal": [MockFunction],
      "pop": [MockFunction],
      "resetTo": [MockFunction],
      "setTitle": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "title": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  postIds={
    Array [
      "root_id",
      "post_id_1",
      "post_id_2",
    ]
  }
  renderFooter={
    <Loading
      color="grey"
      size="large"
      style={Object {}}
    />
  }
/>
`;

exports[`thread should match snapshot, render footer 2`] = `
<Connect(PostList)
  currentUserId="member_user_id"
  indicateNewMessages={false}
  lastPostIndex={-1}
  lastViewedAt={0}
  location="thread"
  navigator={
    Object {
      "dismissModal": [MockFunction],
      "pop": [MockFunction],
      "resetTo": [MockFunction],
      "setTitle": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "title": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  postIds={
    Array [
      "root_id",
      "post_id_1",
      "post_id_2",
    ]
  }
  renderFooter={null}
/>
`;

exports[`thread should match snapshot, render footer 3`] = `
<Connect(SafeAreaIos)
  excludeHeader={true}
  keyboardOffset={20}
>
  <Connect(StatusBar) />
  <KeyboardLayout
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <Loading
      color="grey"
      size="large"
      style={Object {}}
    />
  </KeyboardLayout>
</Connect(SafeAreaIos)>
`;
